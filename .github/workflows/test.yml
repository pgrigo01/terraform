# # Terraform Provider testing workflow.
# name: Tests

# # This GitHub action runs your tests for each pull request and push.
# # Optionally, you can turn it on using a schedule for regular testing.
# on:
#   pull_request:
#     paths-ignore:
#       - 'README.md'
#   push:
#     paths-ignore:
#       - 'README.md'

# # Testing only needs permissions to read the repository contents.
# permissions:
#   contents: read

# jobs:
#   # Ensure project builds before running testing matrix
#   build:
#     name: Build
#     runs-on: ubuntu-latest
#     timeout-minutes: 5
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Go
#         uses: actions/setup-go@v4
#         with:
#           go-version-file: 'go.mod'
#           cache: true

#       - name: Cache Go modules
#         uses: actions/cache@v3
#         with:
#           # Cache the Go build cache and modules directory from standard paths
#           path: |
#             ~/.cache/go-build
#             ~/go/pkg/mod
#           key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#           restore-keys: |
#             ${{ runner.os }}-go-

#       - name: Download dependencies
#         run: go mod download

#       - name: Build
#         run: go build -v .

#       - name: Run linters
#         uses: golangci/golangci-lint-action@v3
#         with:
#           version: latest

#   generate:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Go
#         uses: actions/setup-go@v4
#         with:
#           go-version-file: 'go.mod'
#           cache: true

#       - name: Cache Go modules
#         uses: actions/cache@v3
#         with:
#           path: |
#             ~/.cache/go-build
#             ~/go/pkg/mod
#           key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#           restore-keys: |
#             ${{ runner.os }}-go-

#       # Install Terraform so go generate can invoke it
#       - name: Install Terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: '1.9.5'
#           terraform_wrapper: false

#       - name: Run go generate
#         run: go generate ./...

#       - name: git diff
#         run: |
#           git diff --compact-summary --exit-code || \
#             (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

#   # Run acceptance tests in a matrix with Terraform CLI versions
#   test:
#     name: Terraform Provider Acceptance Tests
#     needs: build
#     runs-on: ubuntu-latest
#     timeout-minutes: 15
#     strategy:
#       fail-fast: false
#       matrix:
#         terraform:
#           - '1.9.*'
#           - '1.10.*'
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Go
#         uses: actions/setup-go@v4
#         with:
#           go-version-file: 'go.mod'
#           cache: true

#       - name: Cache Go modules
#         uses: actions/cache@v3
#         with:
#           path: |
#             ~/.cache/go-build
#             ~/go/pkg/mod
#           key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#           restore-keys: |
#             ${{ runner.os }}-go-

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: ${{ matrix.terraform }}
#           terraform_wrapper: false

#       - name: Download dependencies
#         run: go mod download

#       - name: Run tests
#         env:
#           TF_ACC: "1"
#         run: go test -v -cover ./internal/provider/
#         timeout-minutes: 10


name: Tests

on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    paths-ignore:
      - 'README.md'

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Build
        run: go build -v .

      - name: Run linters
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.9.5'
          terraform_wrapper: false

      - name: Run go generate
        run: go generate ./...

      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        terraform:
          - '1.9.*'
          - '1.10.*'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        env:
          TF_ACC: "1"
        run: go test -v -cover ./internal/provider/
        timeout-minutes: 10